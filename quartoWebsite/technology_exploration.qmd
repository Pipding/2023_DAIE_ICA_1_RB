---
title: "Technology Exploration"
---
## Quarto Website (Parts A & B)
The Quarto Website makes little use of technologies which
were not covered in class. One exception may be the [dollar_format](https://www.rdocumentation.org/packages/scales/versions/0.3.0/topics/dollar_format)
function of the [scales](https://www.rdocumentation.org/packages/scales/) package 
which is used to render numbers as currency (e.g. `200000` -> `â‚¬200,000`).
At one point in the project the [predict](https://www.rdocumentation.org/packages/car/versions/3.1-2/topics/Predict)
function was used in conjunction with an attempt at logistic regression in an effort
to model the likelihood of a project missing a deadline based on its budget and 
team size, however this proved to be beyond my skill level and so isn't present 
in the final version.

## Quarto Dashboard (Part C)
The Quarto Dashboard uses several packages & methods which were not covered in 
class, mostly in the two **Plot View** sections.

### Project Timelines

#### Vistime
The **Project Timelines** page uses the [vistime](https://shosaco.github.io/vistime/)
package to render timelines. This package is fairly simple to use - the timeline
shown in the dashboard uses almost default settings. The timeline is missing the 
`Urban Adventure` game. This seemed like a bug at first, but it's actually because
the end date for the game is invalid (2023-02-31). I decided not to perform any
data cleaning on this entry because it's ambiguous whether the date should be
2023-02-28 or 2023-03-03.

#### daterangeinput
The [daterangeinput](https://shiny.posit.co/r/reference/shiny/0.12.0/daterangeinput) 
input is configurable and multi-lingual, but unremarkable in that it does what 
one would expect and not much else. In the Quarto Dashboard it is used to set
lower and upper ranges for project start & end dates.

### Geographic Spend

#### europop
The [europop](https://github.com/mdlincoln/europop) package is a package which
provides historical population estimates for European cities. The 
**Geographic Spend** page doesn't use any of that data. This package is used
because it also contains coordinates for European cities, which are used to
plot the locations for each project in our database.

#### maps
The [maps](https://www.rdocumentation.org/packages/maps) package is used in the
**Geographic Spend** page to load a world map which is then drawn using the 
[geom_polygon](https://plotly.com/ggplot2/geom_polygon/) function of Plotly.
One issue I had with this map, or rather with Plotly, is that when the map is
rendered using ggplotly, it renders a popup for each line drawn by the 
geom_polygon function. I wasn't able to get rid of this popup but I was able
to remove the text from it. This is the cause of the empty grey box which appears
when hovering over country borders on the map.

#### fuzzyjoin
[fuzzyjoin](https://github.com/dgrtwo/fuzzyjoin) provides several functions for
joining dataframes together based on values that *almost* match. It's often
used for matching on dataframes which contain user-entered data and therefore 
might have spelling errors. In the map view, it was used to join the **City** 
column of the **Projects** table in our database with the **city** column of the
`europop` dataset, because 'Rome' is called 'Roma' in the `europop` dataset.

#### stringdist
[stringdist](https://github.com/markvanderloo/stringdist) is used in conjunction
with `fuzzyjoin`. `fuzzyjoin` can join dataframes based on a custom function and 
stringdist is used to define a function which measures the "distance" between 
strings (that is, how similar they are to one another).
