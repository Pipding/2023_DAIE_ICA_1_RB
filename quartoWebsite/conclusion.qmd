---
title: "Conclusion"
---

Undoubtedly I've learned several things from this assignment, though the learning outcomes
are spread somewhat unevenly across a couple of domains. In terms of statistical
analysis I've learned firstly how powerful a linear regression can be for 
identifying non-obvious relationships between observations, and how this can be 
used to confirm or debunk assumptions.In that same vein, I gained some 
appreciation for how easy it can be to lie using statistical analysis, even
unintentionally. The seemingly innocent choice of which observation is assigned
to which axis can come with preconceived assumptions which will lead to 
misleading results. I also learned something about the value in collecting data.
During the early stages of the project when I was looking for relationships
between observations, I often found myself wanting more data points & more 
observations to draw from. There's obviously a bit of an art to determining how
much data to collect - too large a dataset can also make it difficult to
find relationships between data points - but I have a better appreciation for 
the impacts having a small amount of data can have on the ability to draw 
conclusions.

The other domain where there was significant learning was R/Shiny/Quarto. I have
some mixed feelings on this. I've definitely learned how to create Quarto
websites and dashboards, albeit not very good ones. The reason I have mixed 
feelings about this knowledge is because of the amount of time and effort it took.
I'm fairly sure the majority of my time spent working on the CA was spent learning
the idiosyncrasies of Quarto.This is knowledge is, in my opinion, very niche.
I'm relatively familiar with more standard web development and so in a way I 
felt hamstrung by Quarto. After all, Quarto intends to provide a more user-friendly
way to do some basic web development. I found this fairly frustrating, as Quarto
felt like an abstraction layer which prevented me from tweaking things or
debugging as I'd be able in TypeScript or JavaScript. I also feel that Quarto is
probably a lot more intuitive for users who have prior experience with Shiny.
A lot of Shiny functionality is repackaged in Quarto but it isn't necessarily
given its own documentation, meaning the user has to do some translation from 
Shiny to Quarto in order to implement features. All that said, I appreciate that
it's a niche framework created by and for people who have prior experience with 
R/Shiny and it's attempting to bridge a gap which would otherwise require users
to learn new programming languages and frameworks from scratch. I hope to have
opportunity to use & refine some of the knowledge I've gained in the future.